(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{392:function(t,v,_){"use strict";_.r(v);var n=_(10),a=Object(n.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"算法-bf"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#算法-bf"}},[t._v("#")]),t._v(" "),v("center",[t._v("算法-bf"),v("center")],1)],1),t._v(" "),v("h2",{attrs:{id:"定义"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),v("p",[t._v("bf算法一种在计算机科学中用于搜索问题的搜索算法。会从问题的所有可能解中，逐个尝试，直到找到一个满足问题条件的解为止。这是一种简单易于理解的搜索算法，但它的效率很低。通常用于问题的解的数量很少或问题的解很容易被找到的情况。")]),t._v(" "),v("h2",{attrs:{id:"举例"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#举例"}},[t._v("#")]),t._v(" 举例")]),t._v(" "),v("p",[t._v("判断字符串"),v("code",[t._v("b")]),t._v("是否是字符串"),v("code",[t._v("a")]),t._v("的字串。遍历"),v("code",[t._v("a")]),t._v("，依次对比"),v("code",[t._v("b")]),t._v("的第一个字符，如果相等匹配当前位置到"),v("code",[t._v("b")]),t._v("长度的字符是否依次和"),v("code",[t._v("b")]),t._v("相等")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("i")]),t._v(" "),v("th",[t._v("i")]),t._v(" "),v("th",[t._v("s")]),t._v(" "),v("th",[t._v("f")]),t._v(" "),v("th",[t._v("i")]),t._v(" "),v("th",[t._v("s")]),t._v(" "),v("th",[t._v("h")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("f")]),t._v(" "),v("td",[t._v("i")]),t._v(" "),v("td"),t._v(" "),v("td"),t._v(" "),v("td"),t._v(" "),v("td"),t._v(" "),v("td")])])]),t._v(" "),v("p",[t._v("不匹配,移至下一位")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("i")]),t._v(" "),v("th",[t._v("i")]),t._v(" "),v("th",[t._v("s")]),t._v(" "),v("th",[t._v("f")]),t._v(" "),v("th",[t._v("i")]),t._v(" "),v("th",[t._v("s")]),t._v(" "),v("th",[t._v("h")])])]),t._v(" "),v("tbody",[v("tr",[v("td"),t._v(" "),v("td",[t._v("f")]),t._v(" "),v("td",[t._v("i")]),t._v(" "),v("td"),t._v(" "),v("td"),t._v(" "),v("td"),t._v(" "),v("td")])])]),t._v(" "),v("p",[t._v("不匹配,移至下一位")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("i")]),t._v(" "),v("th",[t._v("i")]),t._v(" "),v("th",[t._v("s")]),t._v(" "),v("th",[t._v("f")]),t._v(" "),v("th",[t._v("i")]),t._v(" "),v("th",[t._v("s")]),t._v(" "),v("th",[t._v("h")])])]),t._v(" "),v("tbody",[v("tr",[v("td"),t._v(" "),v("td"),t._v(" "),v("td",[t._v("f")]),t._v(" "),v("td",[t._v("i")]),t._v(" "),v("td"),t._v(" "),v("td"),t._v(" "),v("td")])])]),t._v(" "),v("p",[t._v("不匹配,移至下一位")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("i")]),t._v(" "),v("th",[t._v("i")]),t._v(" "),v("th",[t._v("s")]),t._v(" "),v("th",[t._v("f")]),t._v(" "),v("th",[t._v("i")]),t._v(" "),v("th",[t._v("s")]),t._v(" "),v("th",[t._v("h")])])]),t._v(" "),v("tbody",[v("tr",[v("td"),t._v(" "),v("td"),t._v(" "),v("td"),t._v(" "),v("td",[t._v("f")]),t._v(" "),v("td",[t._v("i")]),t._v(" "),v("td"),t._v(" "),v("td")])])]),t._v(" "),v("p",[t._v("匹配成功，时间复杂度O(m*n),m、n分别为两个字符串的长度")]),t._v(" "),v("h2",{attrs:{id:"代码实现"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#代码实现"}},[t._v("#")]),t._v(" 代码实现")]),t._v(" "),v("div",{staticClass:"language-golang extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v('package main\n\nimport (\n\t"fmt"\n)\n\nfunc equal(a string, b string) bool {\n\taLen := len(a)\n\tbLen := len(b)\n\tif aLen != bLen {\n\t\treturn false\n\t}\n\tfor i := 0; i < aLen; i++ {\n\t\tif a[i] != b[i] {\n\t\t\treturn false\n\t\t}\n\t}\n\n\treturn true\n}\nfunc bf(a string, b string) bool {\n\taLen := len(a)\n\tbLen := len(b)\n\tif aLen < bLen {\n\t\treturn false\n\t}\n\tfor i := 0; i < aLen; i++ {\n\t\tif a[i] == b[0] && aLen-i >= bLen {\n\t\t\tvar aSubStr string = ""\n\t\t\tfor j := 0; j < bLen; j++ {\n\t\t\t\taSubStr += string(a[i+j])\n\t\t\t}\n\t\t\tif equal(aSubStr, b) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t}\n\n\treturn false\n}\nfunc main() {\n\tfmt.Println(bf("i is fish, and u", "fish")) // true\n\tfmt.Println(bf("i is fish, and u", "fishc")) // false\n}\n')])])])])}),[],!1,null,null,null);v.default=a.exports}}]);