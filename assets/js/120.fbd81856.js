(window.webpackJsonp=window.webpackJsonp||[]).push([[120],{402:function(t,n,s){"use strict";s.r(n);var a=s(10),e=Object(a.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"算法-简单选择排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#算法-简单选择排序"}},[t._v("#")]),t._v(" "),n("center",[t._v("算法-简单选择排序"),n("center")],1)],1),t._v(" "),n("h2",{attrs:{id:"思路"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#思路"}},[t._v("#")]),t._v(" 思路")]),t._v(" "),n("ul",[n("li",[t._v("将待排序数组分成有序序列和无序序列两部分")]),t._v(" "),n("li",[t._v("循环无序序列，找出其中最小的元素加入到有序序列中")]),t._v(" "),n("li",[t._v("重复以上步骤，直到无序序列中只剩下一个元素")])]),t._v(" "),n("h2",{attrs:{id:"实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[t._v("#")]),t._v(" 实现")]),t._v(" "),n("div",{staticClass:"language-golang extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('package main\n\nimport "fmt"\n\nfunc sort(list []int) {\n\tlength := len(list)\n\t// 0个或1个元素不用排序\n\tif length <= 1 {\n\t\treturn\n\t}\n\n\tindex := 0\n\tfor index < length-1 {\n\t\tminIndex := index\n\t\tfor i := index + 1; i < length; i++ {\n\t\t\tif list[i] < list[minIndex] {\n\t\t\t\tminIndex = i\n\t\t\t}\n\t\t}\n\t\tif index != minIndex {\n\t\t\tlist[minIndex], list[index] = list[index], list[minIndex]\n\t\t}\n\t\tindex++\n\t}\n}\n\nfunc main() {\n\tlist := []int{22, 40, 25, 49, 25, 16, 21, 8, 30, 13}\n\tsort(list)\n\tfmt.Println(list)\n}\n\n')])])]),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[t._v("go run ."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("main.go\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("[8 13 16 21 22 25 25 30 40 49]\n")])])])])}),[],!1,null,null,null);n.default=e.exports}}]);