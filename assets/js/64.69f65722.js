(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{347:function(t,e,n){"use strict";n.r(e);var a=n(10),s=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"简要记录nginx常用配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简要记录nginx常用配置"}},[t._v("#")]),t._v(" "),e("center",[t._v("简要记录nginx常用配置")])],1),t._v(" "),e("p",[t._v("只对常用配置稍加记录")]),t._v(" "),e("h2",{attrs:{id:"root"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#root"}},[t._v("#")]),t._v(" root")]),t._v(" "),e("p",[t._v("基础路径，和"),e("code",[t._v("location")]),t._v("地址相结合成为完整地址")]),t._v(" "),e("div",{staticClass:"language-conf extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("location ^~/static/ {\t## 映射的文件位置为 /usr/static\n    root /usr; \n    index index.html\n}\n")])])]),e("h2",{attrs:{id:"路径匹配"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#路径匹配"}},[t._v("#")]),t._v(" 路径匹配")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("=")]),t._v(" 开头表示精确匹配。如 A 中只匹配根目录结尾的请求，后面不能带任何字符串；")]),t._v(" "),e("li",[e("code",[t._v("^~")]),t._v(" 开头表示uri以某个常规字符串开头，不是正则匹配；")]),t._v(" "),e("li",[e("code",[t._v("~")]),t._v(" 开头表示区分大小写的正则匹配；")]),t._v(" "),e("li",[e("code",[t._v("~*")]),t._v(" 开头表示不区分大小写的正则匹配；")]),t._v(" "),e("li",[e("code",[t._v("/")]),t._v(" 通用匹配, 如果没有其它匹配,任何请求都会匹配到。")])]),t._v(" "),e("h3",{attrs:{id:"路径优先级"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#路径优先级"}},[t._v("#")]),t._v(" 路径优先级")]),t._v(" "),e("p",[e("code",[t._v("location =")]),t._v(" > "),e("code",[t._v("location 完整路径")]),t._v(" > "),e("code",[t._v("location ^~ 路径")]),t._v(" > "),e("code",[t._v("location ,* 正则顺序")]),t._v(" > "),e("code",[t._v("location 部分起始路径")]),t._v(" > "),e("code",[t._v("/")])]),t._v(" "),e("h2",{attrs:{id:"proxy-pass"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#proxy-pass"}},[t._v("#")]),t._v(" proxy_pass")]),t._v(" "),e("p",[t._v("代理转发示例")]),t._v(" "),e("div",{staticClass:"language-conf extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 将/proxy/开头的请求代理到http://127.0.0.1:23333/\n# 例如: /proxy/test/ => http://127.0.0.1:23333/test/\nlocation /proxy/ {\n    proxy_pass http://127.0.0.1:23333/;\n}\n")])])]),e("p",[e("code",[t._v("proxy_pass")]),t._v("后如果加了"),e("code",[t._v("/")]),t._v("表示会替换掉"),e("code",[t._v("location")]),t._v("路径，示例代理路径"),e("code",[t._v("/test/")])]),t._v(" "),e("div",{staticClass:"language-conf extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("location /proxy/ {\n    # proxy_pass以/结尾，代理到的路径不会包含/proxy/，即：http://127.0.0.1:23333/test/\n    proxy_pass http://127.0.0.1:23333/;\n}\n\nlocation /proxy/ {\n    # proxy_pass不以/结尾，代理到的路径会包含/proxy/，即：http://127.0.0.1:23333/proxy/test/\n    proxy_pass http://127.0.0.1:23333;\n}\n")])])]),e("h2",{attrs:{id:"http升级https"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http升级https"}},[t._v("#")]),t._v(" http升级https")]),t._v(" "),e("p",[t._v("其实就是重写以下,示例")]),t._v(" "),e("div",{staticClass:"language-conf extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("server {\n    listen 80;\n    server_name your_server_name;\n    # 重写将请求转成https\n    rewrite ^(.*)$ https://$host$1 permanent;\n}\n")])])]),e("h2",{attrs:{id:"跨域代理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#跨域代理"}},[t._v("#")]),t._v(" 跨域代理")]),t._v(" "),e("p",[t._v("其实就是重写请求头，加上跨域的参数,示例")]),t._v(" "),e("div",{staticClass:"language-conf extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("location /api/ {\n    proxy_pass your_ip_addr; # 例如 http://1.15.8.9:9999/\n    proxy_set_header X-Forwarded-Proto http;\n    client_max_body_size     20m;\n    add_header 'Access-Control-Allow-Origin' '*';\n    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\n    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n    if ($request_method = 'OPTIONS') {\n        #\n        # Tell client that this pre-flight info is valid for 20 days\n        #\n        add_header 'Access-Control-Max-Age' 1728000;\n        add_header 'Content-Type' 'text/plain; charset=utf-8';\n        add_header 'Content-Length' 0;\n        return 204;\n    }\n    if ($request_method = 'POST') {\n        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';\n    }\n    if ($request_method = 'GET') {\n        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';\n    }\n}\n")])])]),e("h2",{attrs:{id:"gzip压缩"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gzip压缩"}},[t._v("#")]),t._v(" gzip压缩")]),t._v(" "),e("p",[t._v("资源过大前端访问太慢，可以尝试开启gzip,示例")]),t._v(" "),e("div",{staticClass:"language-conf extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("gzip on; # 开启 gzip 压缩\ngzip_static on; # 若存在静态 gz 文件，则使用该文件\ngzip_min_length 10k; # 设置允许压缩的页面最小字节数\ngzip_buffers 16 8k; # 设置用于处理请求压缩的缓冲区数量和大小\ngzip_comp_level 4; # 设置压缩级别 1-9，数字越大，压缩后的大小越小，也越占用CPU，花费时间越长\n# 对特定的 MIME 类型生效, 其中'text/html’被系统强制启用\ngzip_types application/javascript text/css font/ttf font/x-woff;\ngzip_vary on; # 是否在 http header中 添加 Vary:Accept-Encoding, on | off\ngzip_http_version 1.1; # 在 http/1.1 的协议下不开启压缩\n")])])]),e("h2",{attrs:{id:"完整示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#完整示例"}},[t._v("#")]),t._v(" 完整示例")]),t._v(" "),e("div",{staticClass:"language-conf extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# nginx跨域代理\nuser  nginx;\nworker_processes  auto;\nerror_log  /var/log/nginx/error.log notice;\npid        /var/run/nginx.pid;\nevents {\n    worker_connections  1024;\n}\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                      '$status $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log  /var/log/nginx/access.log  main;\n    sendfile        on;\n    keepalive_timeout  65;\n\n    gzip on; # 开启 gzip 压缩\n    gzip_static on; # 若存在静态 gz 文件，则使用该文件\n    gzip_min_length 10k; # 设置允许压缩的页面最小字节数\n    gzip_buffers 16 8k; # 设置用于处理请求压缩的缓冲区数量和大小\n    gzip_comp_level 4; # 设置压缩级别 1-9，数字越大，压缩后的大小越小，也越占用CPU，花费时间越长\n\t# 对特定的 MIME 类型生效, 其中'text/html’被系统强制启用\n    gzip_types application/javascript text/css font/ttf font/x-woff;\n    gzip_vary on; # 是否在 http header中 添加 Vary:Accept-Encoding, on | off\n    gzip_http_version 1.1; # 在 http/1.1 的协议下不开启压缩\n\n    # include /etc/nginx/conf.d/*.conf; \n    server {\n        listen       80;\n        listen  [::]:80;\n        server_name  0.0.0.0;\n        location / {\n            root   /usr/share/nginx/html;\n            index  index.html index.htm;\n        }\n        location /api/ {\n            proxy_pass http://10.10.10.10:9999/;\n            proxy_set_header X-Forwarded-Proto http;\n            client_max_body_size     20m;\n            add_header 'Access-Control-Allow-Origin' '*';\n            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\n            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n\t\t    if ($request_method = 'OPTIONS') {\n                #\n                # Tell client that this pre-flight info is valid for 20 days\n                #\n                add_header 'Access-Control-Max-Age' 1728000;\n                add_header 'Content-Type' 'text/plain; charset=utf-8';\n                add_header 'Content-Length' 0;\n                return 204;\n            }\n            if ($request_method = 'POST') {\n                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';\n            }\n            if ($request_method = 'GET') {\n                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';\n            }\n        }\n    }\n    server {\n        listen 80;\n        server_name kexiong.vip;\n        #将请求转成https\n        rewrite ^(.*)$ https://$host$1 permanent;\n    }\n}\n\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);